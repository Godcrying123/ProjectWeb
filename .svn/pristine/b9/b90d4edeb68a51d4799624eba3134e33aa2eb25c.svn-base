package com.project.webapp.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.project.webapp.domain.User;
import com.project.webapp.domain.UserMatches;
import com.project.webapp.model.Matches;

/**
 * Servlet implementation class BetMatchController
 */
public class BetMatchController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private BetController betController;
	private int match_id = 0;
	private String betAmount = null;
	private UserDao userDao;
	private User user;
	private MatchesController matchesController;
	private static List<Matches> matchesList1;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public BetMatchController() {
		super();
		this.match_id = match_id;
		this.betAmount = betAmount;
		this.userDao = new UserDao();
		this.user = new User();
		this.matchesList1 = new ArrayList<Matches>();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ")
				.append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		String email = (String) request.getSession().getAttribute(
				"emailValidate");
		BetController betController = new BetController();
		user = (User) userDao.search(email);

		if (request.getParameter("betTeam1") != null) {
			betAmount = request.getParameter("bet1");
			match_id = 211;
			betController.betMatch(email, match_id, Double.valueOf(betAmount),
					Integer.valueOf(request.getParameter("betTeam1")));
			Double TotalAmount = user.getAccount_Amount()
					- Double.valueOf(betAmount);
			user.setAccount_Amount(TotalAmount);
			userDao.save(user);
			response.sendRedirect("HomePage.jsp");
		}
		if (request.getParameter("betTeam2") != null) {
			betAmount = request.getParameter("bet2");
			match_id = 212;
			betController.betMatch(email, match_id, Double.valueOf(betAmount),
					Integer.valueOf(request.getParameter("betTeam2")));
			Double TotalAmount = user.getAccount_Amount()
					- Double.valueOf(betAmount);
			user.setAccount_Amount(TotalAmount);
			userDao.save(user);
			response.sendRedirect("HomePage.jsp");
		}
		if (request.getParameter("betTeam3") != null) {
			betAmount = request.getParameter("bet3");
			match_id = 213;
			betController.betMatch(email, match_id, Double.valueOf(betAmount),
					Integer.valueOf(request.getParameter("betTeam3")));
			Double TotalAmount = user.getAccount_Amount()
					- Double.valueOf(betAmount);
			user.setAccount_Amount(TotalAmount);
			userDao.save(user);
			response.sendRedirect("HomePage.jsp");
		}
		if (request.getParameter("betTeam4") != null) {
			betAmount = request.getParameter("bet4");
			match_id = 214;
			betController.betMatch(email, match_id, Double.valueOf(betAmount),
					Integer.valueOf(request.getParameter("betTeam4")));
			Double TotalAmount = user.getAccount_Amount()
					- Double.valueOf(betAmount);
			user.setAccount_Amount(TotalAmount);
			userDao.save(user);
			response.sendRedirect("HomePage.jsp");
		}
		if (request.getParameter("betTeam5") != null) {
			betAmount = request.getParameter("bet5");
			match_id = 215;
			betController.betMatch(email, match_id, Double.valueOf(betAmount),
					Integer.valueOf(request.getParameter("betTeam5")));
			Double TotalAmount = user.getAccount_Amount()
					- Double.valueOf(betAmount);
			user.setAccount_Amount(TotalAmount);
			userDao.save(user);
			response.sendRedirect("HomePage.jsp");
		}
		if (request.getParameter("betTeam6") != null) {
			betAmount = request.getParameter("bet6");
			match_id = 216;
			betController.betMatch(email, match_id, Double.valueOf(betAmount),
					Integer.valueOf(request.getParameter("betTeam6")));
			Double TotalAmount = user.getAccount_Amount()
					- Double.valueOf(betAmount);
			user.setAccount_Amount(TotalAmount);
			userDao.save(user);
			response.sendRedirect("HomePage.jsp");
		}
		if (request.getParameter("betTeam7") != null) {
			betAmount = request.getParameter("bet7");
			match_id = 217;
			betController.betMatch(email, match_id, Double.valueOf(betAmount),
					Integer.valueOf(request.getParameter("betTeam7")));
			Double TotalAmount = user.getAccount_Amount()
					- Double.valueOf(betAmount);
			user.setAccount_Amount(TotalAmount);
			userDao.save(user);
			response.sendRedirect("HomePage.jsp");
		}
		if (request.getParameter("betTeam8") != null) {
			betAmount = request.getParameter("bet8");
			match_id = 218;
			betController.betMatch(email, match_id, Double.valueOf(betAmount),
					Integer.valueOf(request.getParameter("betTeam8")));
			Double TotalAmount = user.getAccount_Amount()
					- Double.valueOf(betAmount);
			user.setAccount_Amount(TotalAmount);
			userDao.save(user);
			response.sendRedirect("HomePage.jsp");
		}
		if (request.getParameter("betTeam9") != null) {
			betAmount = request.getParameter("bet9");
			match_id = 219;
			betController.betMatch(email, match_id, Double.valueOf(betAmount),
					Integer.valueOf(request.getParameter("betTeam9")));
			Double TotalAmount = user.getAccount_Amount()
					- Double.valueOf(betAmount);
			user.setAccount_Amount(TotalAmount);
			userDao.save(user);
			response.sendRedirect("HomePage.jsp");
		}
		if (request.getParameter("betTeam10") != null) {
			betAmount = request.getParameter("bet10");
			match_id = 220;
			betController.betMatch(email, match_id, Double.valueOf(betAmount),
					Integer.valueOf(request.getParameter("betTeam10")));
			Double TotalAmount = user.getAccount_Amount()
					- Double.valueOf(betAmount);
			user.setAccount_Amount(TotalAmount);
			userDao.save(user);
			response.sendRedirect("HomePage.jsp");
		}

	}

	public int getMatch_id() {
		return match_id;
	}

	public String getBetAmount() {
		return betAmount;
	}

	public List<Matches> getMatchesList1() {
		List<UserMatches> betList = new ArrayList<UserMatches>();
		betList = user.getBettingList();
		for (UserMatches userMatches : betList) {
			matchesList1.add(matchesController.searchMatches(userMatches
					.getMatches().getMatch_id()));
		}
		return matchesList1;
	}

}
